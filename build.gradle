buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7.+'
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.0.0'
group = 'com.bug1312.cloudyporkchops'
archivesBaseName = 'cloudyporkchops'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
	mappings channel: 'official', version: minecraft_version
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			mods {
				examplemod {
					source sourceSets.main
				}
			}
		}

		clientAlt {
			parent minecraft.runs.client
			taskName 'runClientAlt'
			property 'devauth.enabled', 'false'
			args '--username', 'Alt'
		}

		server {
			workingDirectory project.file('svr')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			mods {
				examplemod {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				examplemod {
					source sourceSets.main
				}
			}
		}
	}
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven { url = "https://dvs1.progwml6.com/files/maven/" }
	maven { url = "https://maven.enginehub.org/repo/" }
	maven { url = "https://cursemaven.com" }
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
}

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

	compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
	runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")

	if (project.property('mods.dev_auth')) {
		runtimeOnly fg.deobf("me.djtheredstoner:DevAuth-forge-latest:1.1.0")
	}

	if (project.property('mods.antique_atlas')) {
		runtimeOnly fg.deobf("curse.maven:antique-atlas-227795:3178423")
		runtimeOnly fg.deobf("curse.maven:cloth-config-348521:3782784")
	}

	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
	add sourceSets.main, 'mixins.cloudyporkchops.refmap.json'
	config 'mixins.cloudyporkchops.json'
}

jar {
	manifest {
		attributes([
			"Specification-Title": "cloudyporkchops",
			"Specification-Vendor": "bug1312",
			"Specification-Version": "1.0.0",
			"Implementation-Title": project.jar.baseName,
			"Implementation-Version": project.jar.archiveVersion,
			"Implementation-Vendor" :"bug1312",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

jar.finalizedBy('reobfJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file:///${project.projectDir}/mcmodsrepo"
		}
	}
}

