buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7.+'
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.0.0'
group = 'com.bug1312.cloudyporkchops'
archivesBaseName = 'cloudyporkchops'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
	mappings channel: 'official', version: '1.19.2'
	// accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			property 'forge.enabledGameTestNamespaces', 'cloudyporkchops'

			mods {
				cloudyporkchops {
					source sourceSets.main
				}
			}
		}

		clientAlt {
			parent minecraft.runs.client
			taskName 'runClientAlt'
			property 'devauth.enabled', 'false'
			args '--username', 'Alt'
		}

		server {
			workingDirectory project.file('svr')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			property 'forge.enabledGameTestNamespaces', 'cloudyporkchops'

			mods {
				cloudyporkchops {
					source sourceSets.main
				}
			}
		}

		gameTestServer {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			property 'forge.enabledGameTestNamespaces', 'cloudyporkchops'

			mods {
				cloudyporkchops {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args '--mod', 'cloudyporkchops', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				cloudyporkchops {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven { url = "https://dvs1.progwml6.com/files/maven/" }
	maven { url = "https://modmaven.dev" }
	maven { url = "https://maven.enginehub.org/repo/" }
	maven { url = "https://cursemaven.com" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.19.2-43.1.25'

	compileOnly fg.deobf("mezz.jei:jei-1.19.2-forge-api:11.3.0.262")
	compileOnly fg.deobf("mezz.jei:jei-1.19.2-common-api:11.3.0.262")

	if (project.property('mods.jei').toBoolean()) runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-forge:11.3.0.262")
	if (project.property('mods.configured').toBoolean()) runtimeOnly fg.deobf("curse.maven:configured-457570:4011355")
	if (project.property('mods.dev_auth').toBoolean()) runtimeOnly fg.deobf("me.djtheredstoner:DevAuth-forge-latest:1.1.0")

	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
	add sourceSets.main, 'mixins.cloudyporkchops.refmap.json'
	config 'mixins.cloudyporkchops.json'

	debug.verbose = true
	debug.export = true
}

jar {
	manifest {
		attributes([
			"Specification-Title": "cloudyporkchops",
			"Specification-Vendor": "bug1312",
			"Specification-Version": "0.0.0",
			"Implementation-Title": project.jar.baseName,
			"Implementation-Version": project.jar.archiveVersion,
			"Implementation-Vendor" :"bug1312",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}


jar.finalizedBy('reobfJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/mcmodsrepo"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}
